name: Auto Update OpenCore

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 1 * * *"
  workflow_dispatch:
    inputs:
      force_update:
        description: '是否强制更新（忽略版本检查）'
        type: boolean
        default: false

permissions:
  contents: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  update:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      new_version: ${{ steps.update.outputs.new_version }}
    steps:
      - name: 检出OpenCore仓库
        uses: actions/checkout@v4
        with:
          repository: acidanthera/OpenCorePkg
          path: opencore-repo
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: 预安装依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y git-lfs pigz tree
          git lfs install

      # 新增：验证仓库结构步骤
      - name: 验证仓库结构
        run: |
          echo "当前仓库结构："
          tree opencore-repo -L 3 || true  # 安装tree后查看目录结构

      # 新增：初始化子模块
      - name: 初始化子模块
        run: |
          cd opencore-repo
          git submodule update --init --recursive

      # 新增：完整拉取Git LFS文件
      - name: 完整拉取Git LFS文件
        run: |
          cd opencore-repo
          git lfs pull --include "*"

      - name: 强制更新OpenCore文件
        id: update
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          start_time=$(date +%s)
          
          log() { 
            local level=$1
            shift
            echo "[$(date +'%Y-%m-%d %H:%M:%S')] [$level] $@"
          }

          # 获取最新版本标签
          cd opencore-repo
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || git rev-parse --short HEAD)
          cd ..

          # 清理旧文件
          rm -rf dist/* || true

          # 修正后的复制命令（根据实际路径调整）
          # 注意：需要根据实际仓库结构修改以下路径
          cp -r opencore-repo/Udk2020/OpenCorePkg/Binary/* dist/
          cp -r opencore-repo/Documentation/* dist/docs/

          # 更新版本文件
          echo "$LATEST_TAG" > version.txt
          log "INFO" "完成文件同步，最新版本: $LATEST_TAG"

          # 性能统计
          total_time=$(( $(date +%s) - start_time ))
          log "INFO" "总执行时间: ${total_time}秒"

      - name: 提交更改
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "🔄 强制同步 OpenCore 文件: ${{ steps.update.outputs.new_version }}"
          branch: main
          file_pattern: "version.txt dist/** docs/**"
          commit_options: '--allow-empty'
          push_options: '--force-with-lease'
