name: Auto Update Worker

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 1 * * *"
  workflow_dispatch:
    inputs:
      force_update:
        description: '是否强制更新（忽略版本检查）'
        type: boolean
        default: false

permissions:
  contents: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  update:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      new_version: ${{ steps.update.outputs.new_version }}
    steps:
      - name: 检出仓库
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: worker-repo
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 预安装依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y pigz jq

      - name: 检查并更新 Worker
        id: update
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          start_time=$(date +%s)
          
          log() { 
            local level=$1
            shift
            echo "[$(date +'%Y-%m-%d %H:%M:%S')] [$level] $@"
          }

          FORCE_UPDATE=${{ inputs.force_update }}
          LOCAL_VERSION=$(cat worker-repo/version.txt 2>/dev/null || echo "")
          log "INFO" "开始检查更新..."
          log "DEBUG" "本地版本: ${LOCAL_VERSION:-无}"

          REPO_URL="https://api.github.com/repos/bia-pain-bache/BPB-Worker-Panel/releases"
          RESPONSE=$(curl -sS --retry 5 \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "$REPO_URL")

          if ! echo "$RESPONSE" | jq -e '.[0] | has("tag_name")' >/dev/null; then
            log "ERROR" "获取版本信息失败"
            exit 1
          fi

          TAG_NAME=$(echo "$RESPONSE" | jq -r '.[0].tag_name')
          DOWNLOAD_URL=$(echo "$RESPONSE" | jq -r '.[0].assets[] | select(.name == "worker-source.zip") | .browser_download_url')

          if [ -z "$TAG_NAME" ]; then
            log "ERROR" "无法解析版本标签"
            exit 1
          fi

          if [ "$LOCAL_VERSION" = "$TAG_NAME" ] && [ "$FORCE_UPDATE" != "true" ]; then
            log "INFO" "已是最新版本，无需更新"
            echo "new_version=$LOCAL_VERSION" >> $GITHUB_OUTPUT
            exit 0
          fi

          if ! wget --tries=5 --waitretry=1 -q -O worker-source.zip "$DOWNLOAD_URL"; then
            log "ERROR" "文件下载失败"
            exit 1
          fi

          # 创建临时目录并解压源码
          mkdir -p worker-repo/src
          unzip -o worker-source.zip -d worker-repo/src || {
            log "ERROR" "文件解压失败"
            exit 1
          }
          rm worker-source.zip

          # 仅保留必要文件（根据实际项目结构调整）
          cp -rf worker-repo/src/* worker-repo/dist/
          rm -rf worker-repo/src

          # 更新版本文件
          echo "$TAG_NAME" > worker-repo/version.txt
          log "INFO" "更新完成，新版本: $TAG_NAME"
          echo "new_version=$TAG_NAME" >> $GITHUB_OUTPUT

          total_time=$(( $(date +%s) - start_time ))
          log "INFO" "总执行时间: ${total_time}秒"

      - name: 提交更改
        if: ${{ steps.update.outputs.new_version != '' }}
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          repository: worker-repo
          commit_message: "🔄 自动同步 Worker 版本: ${{ steps.update.outputs.new_version }}"
          branch: main
          file_pattern: "version.txt dist/**"
          push_options: '--force-with-lease'
