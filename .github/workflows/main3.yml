name: Sync-BPB-Worker-Panel

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  sync-content:
    permissions:
      contents: write
      issues: write  # 新增权限用于创建版本说明
    runs-on: ubuntu-latest

    steps:
    - name: 检出仓库
      uses: actions/checkout@v4
      with:
        ref: main
        fetch-depth: 0  # 获取完整历史记录用于版本比较

    - name: 下载资产
      run: |
        curl -L -o worker.js "https://github.com/bia-pain-bache/BPB-Worker-Panel/raw/main/worker.js"
        curl -L -o worker.zip "https://github.com/bia-pain-bache/BPB-Worker-Panel/raw/main/worker.zip"
        curl -L -o source-code.zip "https://github.com/bia-pain-bache/BPB-Worker-Panel/raw/main/source-code.zip"

    - name: 生成更新说明
      id: changelog
      run: |
        # 获取变更文件列表
        CHANGES=$(git diff --name-status HEAD)
        
        # 生成格式化说明
        echo "本次同步包含以下更新：" > CHANGELOG.md
        echo "$CHANGES" | grep -v '^D' | while read line; do
          status=$(echo $line | cut -c1)
          file=$(echo $line | cut -c3-)
          echo "- ${status} ${file}" >> CHANGELOG.md
        done
        
        # 生成版本标签（使用UTC时间）
        VERSION_TAG="v$(date -u +'%Y.%m.%d-%H%M')-sync"
        echo "version_tag=$VERSION_TAG" >> $GITHUB_OUTPUT
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        cat CHANGELOG.md >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: 提交更改
      run: |
        git config user.name 'github-actions[bot]'
        git config user.email 'github-actions[bot]@users.noreply.github.com'
        
        # 添加所有变更文件和更新说明
        git add worker.js worker.zip source-code.zip CHANGELOG.md
        
        # 创建带版本标签的提交
        git commit -m "chore: 同步BPB-Worker-Panel资产 [skip ci]
        
        ${{ steps.changelog.outputs.changelog }}"
        
        # 推送代码和标签
        git push origin main
        git tag ${{ steps.changelog.outputs.version_tag }}
        git push origin ${{ steps.changelog.outputs.version_tag }}
